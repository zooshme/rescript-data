// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Decode$Json from "@zooshme/rescript-json/src/Decode.res.mjs";
import * as Encode$Json from "@zooshme/rescript-json/src/Encode.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

function useRequest(endpoint, headers, credentials, method, timeoutOpt, body, decode) {
  var timeout = timeoutOpt !== undefined ? timeoutOpt : 5000;
  var match = React.useState(function () {
        return "NotAsked";
      });
  var setData = match[1];
  var controller = new AbortController();
  var options = method === "GET" ? ({
        method: method,
        headers: Caml_option.some(new Headers(headers)),
        credentials: credentials,
        signal: Caml_option.some(controller.signal)
      }) : ({
        method: method,
        body: Caml_option.some(Core__Option.getOr(Core__Option.map(body, (function (__x) {
                        return Encode$Json.encode(__x, 0);
                      })), "")),
        headers: Caml_option.some(new Headers(headers)),
        credentials: credentials,
        signal: Caml_option.some(controller.signal)
      });
  var request = new Request(endpoint, options);
  var send_ = async function () {
    try {
      setData(function (param) {
            return "Loading";
          });
      var timeoutId = setTimeout((function () {
              controller.abort("Request timed out");
              setData(function (param) {
                    return {
                            TAG: "Error",
                            _0: "Request timed out"
                          };
                  });
            }), timeout);
      var response = await fetch(request);
      clearTimeout(timeoutId);
      var json = await response.json();
      var data = Decode$Json.decode(json, decode);
      if (data.TAG === "Ok") {
        var data$1 = data._0;
        return setData(function (param) {
                    return {
                            TAG: "Data",
                            _0: data$1
                          };
                  });
      }
      var error = data._0;
      return setData(function (param) {
                  return {
                          TAG: "Error",
                          _0: Decode$Json.errorToString(error)
                        };
                });
    }
    catch (raw_e){
      var e = Caml_js_exceptions.internalToOCamlException(raw_e);
      if (e.RE_EXN_ID === Js_exn.$$Error) {
        var match = e._1.message;
        if (match !== undefined) {
          return setData(function (param) {
                      return {
                              TAG: "Error",
                              _0: "Request timed out"
                            };
                    });
        } else {
          return setData(function (param) {
                      return {
                              TAG: "Error",
                              _0: "An error occurred"
                            };
                    });
        }
      }
      throw e;
    }
  };
  return {
          data: match[0],
          send: send_
        };
}

export {
  useRequest ,
}
/* react Not a pure module */
